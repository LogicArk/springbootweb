#服务名称
spring.application.name=eureka-client-article-service

#服务端口
server.port=8082

#eureka注册中心地址
eureka.client.serviceUrl.defaultZone=http://logicark:123456@localhost:8761/eureka/

# 采用IP注册
eureka.instance.prefer-ip-address=true

# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

#开启健康检查 (需要在 pom.xml 中引入 actuator 的依赖)
eureka.client.healthcheck.enabled=true
#Eureka Client 发送心跳给Eureka Server 端的频率，指定续约更新频率。如果在eureka在eureka.instance.lease-renewal-interval-in-seconds后没有收到心跳，将摘除改实例。
eureka.instance.lease-renewal-interval-in-seconds=5
#表示 Eureka Server 至上一次收到 client 的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则移除该 Instance
# (该值至少应该大于leaseRenewalIntervalInSeconds)
eureka.instance.lease-expiration-duration-in-seconds=5

#自定义元数据说得通俗点就是自定义配置，我们可以为每个 Eureka Client 定义一些属于自己的配置，这个配置不会影响 Eureka 的功能。
eureka.instance.metadataMap.biancheng=logicark

#设置feign日志级别
logging.level.net.biancheng.eurekaclientarticleservice.client.UserRemoteClient=DEBUG

#【GZIP 压缩配置】
#开启压缩可以有效节约网络资源，提升接口性能(只有当 Feign 的 Http Client 不是 okhttp3 的时候，压缩才会生效)
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#还可以配置压缩的类型、最小压缩值的标准：
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048

#除了使用代码的方式来对 Feign 进行配置，我们还可以通过配置文件的方式来指定 Feign 的配置。
## 链接超时时间
#feign.client.config.feignName.connectTimeout=5000
## 读取超时时间
#feign.client.config.feignName.readTimeout=5000
## 日志等级
#feign.client.config.feignName.loggerLevel=full
## 重试
#feign.client.config.feignName.retryer=com.example.SimpleRetryer
## 拦截器
#feign.client.config.feignName.requestInterceptors[0]=com.example.FooRequestInterceptor
#feign.client.config.feignName.requestInterceptors[1]=com.example.BarRequestInterceptor
## 编码器
#feign.client.config.feignName.encoder=com.example.SimpleEncoder
## 解码器
#feign.client.config.feignName.decoder=com.example.SimpleDecoder
## 契约
#feign.client.config.feignName.contract=com.example.SimpleContract
